import sys
import string
import importlib
import os
import random

from colorama import Fore, Style

def help():
	print(Fore.YELLOW+"""
help show this command
use -to use exploit, auxiliary or payload ex: use type:exploit exploit.FastFuzzer
run -to run an exploit, auxiliary or payload
clear -clear screen
show -shows exploit, auxiliary or payload ex: show exploit
		"""+Style.RESET_ALL)
def module_help():
	print("""
run     - run exploit
help    - shows this 
set     - set RHOST or RPORT
options - options in them exploit""")

def banner():
	banner_list="banner.txt", "banner1.txt", "banner2.txt"
	RandomBanner=random.choice(banner_list)
	FileBanner=open(RandomBanner, 'r')
	Banner=FileBanner.read()
	print("")
	print(Fore.RED+Banner+Style.RESET_ALL)
	print("\n\n")
	print(Fore.RED+"[-] Threat level - 999"+Style.RESET_ALL)
	print(Fore.GREEN+"[+] Acess Granted"+Style.RESET_ALL)
	print(Fore.YELLOW+"       =[ KaliExploit v1.5       ]")
	print(Fore.YELLOW+"+ -- --=[ exploit:9\tpayload:1]\n+ -- --=[ auxiliary:5	 	 ]"+Style.RESET_ALL)

def run():
	while True:
		command=input("[KES] > ")

		if command=="help":
			help()

		elif command=="exit":
			exit()

		if command=="banner":
			banner()

		elif command == "show auxiliary":
			print("auxiliary")
			
			auxiliary_path="auxiliary"
			auxiliary_file=os.listdir(auxiliary_path)
			for auxiliary_files in auxiliary_file:
				if auxiliary_files.endswith(".py"):
					print(Fore.CYAN+"auxiliary."+auxiliary_files.replace(".py","")+Style.RESET_ALL)


			print(Fore.YELLOW+"---------")
			print(Fore.YELLOW+" Example")
			print(Fore.YELLOW+"---------")
			print(Fore.CYAN+"use auxiliary.TcpFlood"+Style.RESET_ALL)

		elif command == "show payload":
			print(Fore.YELLOW+"payload"+Style.RESET_ALL)
			
			payload_path="payload"
			payload_file=os.listdir(payload_path)
			for payload_files in payload_file:
				if payload_files.endswith(".py"):
					print(Fore.CYAN+"payload."+payload_files.replace(".py","")+Style.RESET_ALL)


			print(Fore.YELLOW+"---------")
			print(Fore.YELLOW+" Example")
			print(Fore.YELLOW+"---------")
			print(Fore.CYAN+"use payload.WindowsBofPayload"+Style.RESET_ALL)

		elif command == "show exploit":
			print(Fore.YELLOW+"exploit"+Style.RESET_ALL)
			
			exploit_path="exploit"
			exploit_file=os.listdir(exploit_path)
			for exploit_files in exploit_file:
				if exploit_files.endswith(".py"):
					print(Fore.CYAN+"exploit."+exploit_files.replace(".py","")+Style.RESET_ALL)


			print(Fore.YELLOW+"---------")
			print(Fore.YELLOW+" Example")
			print(Fore.YELLOW+"---------")
			print(Fore.CYAN+"use exploit.FastFuzzer"+Style.RESET_ALL)

		if command.startswith("use exploit."):
				module_name = command.split(" ")[1]
				print("Loading module: %s" % (module_name))
				try:
					module = importlib.import_module(module_name)
				except Exception as e:
					print(e)
					continue
				CONTEXT = module_name
				exploit = module.Exploit()
				exploit.show_info()
				try:
					exploit.show_options()
				except:
					pass
				print("%s" % ("-" * 0x40))
				print(Fore.CYAN+"[ + ]"+Style.RESET_ALL+"Exploit is ready")
				while True:
					module_command = input(Fore.RED+"[KES] exploit({})=> ".format(CONTEXT)+Style.RESET_ALL)
					if command=="banner":
						banner()
					if module_command == "clear":
						os.system("clear")
						continue
					if module_command == "help":
						module_help()
						continue
					if module_command.startswith("set "):
						if len(module_command.split(" ")) == 3:
							key = module_command.split(" ")[1]
							value = module_command.split(" ")[2]
							exploit.set_config(key, value)
						else:
							print("Check your input!")
							print("Example: \n\tset [KEY] [VALUE]")
					elif module_command == "options":
						exploit.show_options()
					elif module_command == "info":
						exploit.show_info()
					elif module_command == "run":
						exploit.run()
					elif module_command == "quit" or module_command == "q" or module_command == "exit" or module_command == "back":
						break
					if module_command=="ls":
						os.system("ls")
		if command.startswith("use payload."):
				module_name = command.split(" ")[1]
				print("Loading module: %s" % (module_name))
				try:
					module = importlib.import_module(module_name)
				except Exception as e:
					print(e)
					continue
				CONTEXT = module_name
				payload = module.Payload()
				payload.show_info()
				try:
					payload.show_options()
				except:
					pass
				print("%s" % ("-" * 0x40))
				print(Fore.CYAN+"[ + ]"+Style.RESET_ALL+"Exploit is ready")
				while True:
					module_command = input(Fore.RED+"[KES] payload({})=> ".format(CONTEXT)+Style.RESET_ALL)
					if command=="banner":
						banner()
					if module_command == "clear":
						os.system("clear")
						continue
					if module_command == "help":
						module_help()
						continue
					if module_command.startswith("set "):
						if len(module_command.split(" ")) == 3:
							key = module_command.split(" ")[1]
							value = module_command.split(" ")[2]
							payload.set_config(key, value)
						else:
							print("Check your input!")
							print("Example: \n\tset [KEY] [VALUE]")
					elif module_command == "options":
						payload.show_options()
					elif module_command == "info":
						payload.show_info()
					elif module_command == "run":
						payload.run()
					elif module_command == "quit" or module_command == "q" or module_command == "exit" or module_command == "back":
						break
					if module_command=="ls":
						os.system("ls")
		if command.startswith("use auxiliary."):
				module_name = command.split(" ")[1]
				print("Loading module: %s" % (module_name))
				try:
					module = importlib.import_module(module_name)
				except Exception as e:
					print(e)
					continue
				CONTEXT = module_name
				auxiliary = module.Auxiliary()
				auxiliary.show_info()
				try:
					auxiliary.show_options()
				except:
					pass
				print("%s" % ("-" * 0x40))
				print(Fore.CYAN+"[ + ]"+Style.RESET_ALL+"Exploit is ready")
				while True:
					module_command = input(Fore.RED+"[KES] auxiliary({})=> ".format(CONTEXT)+Style.RESET_ALL)
					if command=="banner":
						banner()
					if module_command == "clear":
						os.system("clear")
						continue
					if module_command == "help":
						module_help()
						continue
					if module_command.startswith("set "):
						if len(module_command.split(" ")) == 3:
							key = module_command.split(" ")[1]
							value = module_command.split(" ")[2]
							auxiliary.set_config(key, value)
						else:
							print("Check your input!")
							print("Example: \n\tset [KEY] [VALUE]")
					elif module_command == "options":
						auxiliary.show_options()
					elif module_command == "info":
						auxiliary.show_info()
					elif module_command == "run":
						auxiliary.run()
					elif module_command == "quit" or module_command == "q" or module_command == "exit" or module_command == "back":
						break
					if module_command=="ls":
						os.system("ls")
		elif command=="clear":
			os.system("clear")
